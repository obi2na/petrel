// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package models

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateIntegration(ctx context.Context, arg CreateIntegrationParams) (Integration, error)
	CreateNotionIntegration(ctx context.Context, arg CreateNotionIntegrationParams) (NotionIntegration, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeactivateUser(ctx context.Context, id uuid.UUID) error
	DeleteNotionIntegrationByIntegrationID(ctx context.Context, integrationID uuid.UUID) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	//Delete user and all user integrations
	DeleteUserIntegrations(ctx context.Context, userID pgtype.UUID) error
	GetIntegrationByService(ctx context.Context, arg GetIntegrationByServiceParams) (Integration, error)
	GetIntegrationsForUser(ctx context.Context, userID pgtype.UUID) ([]Integration, error)
	GetNotionIntegrationByIntegrationID(ctx context.Context, integrationID uuid.UUID) (NotionIntegration, error)
	GetNotionIntegrationByWorkspaceID(ctx context.Context, workspaceID string) (NotionIntegration, error)
	GetNotionIntegrationsForUser(ctx context.Context, userID pgtype.UUID) ([]Integration, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	ListUsers(ctx context.Context) ([]User, error)
	UpdateLastLogin(ctx context.Context, id uuid.UUID) error
}

var _ Querier = (*Queries)(nil)
